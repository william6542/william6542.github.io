summarize(sum(Pond.Value))
colnames(yearly_price_total)[2] <- "pond_value"
yearly_plot <-
yearly_price_total %>%
ggplot(aes(x=Year, y = pond_value)) +
geom_line(aes(x=Year, y=pond_value), size=1)
yearly_plot +
scale_x_continuous(breaks = seq(2000, 2016, by = 1)) +
labs(y = "Pond Value") +
ggtitle("Total Pond Values: 2000-2015") +
scale_y_continuous(labels=comma) +
theme(text = element_text(size = 24))
# __________________________________________________________________________________
# DATAFRAME 2 Grade to Pond Value
# (We may or may not use this due to difficult in interpreting and organizing grades).
grade_to_pond <-
log_prices_clean_2 %>%
group_by(Grade, Pond.Value) %>%
count(sort = TRUE)
aggregate_grade_value <-
log_prices_clean_2 %>%
group_by(Grade) %>%
summarize(Pond.Value = sum(Pond.Value))
# need to clean this to simplify and unify same grades which are inputted differently
# step 1: remove leading and trailing white space
aggregate_grade_value_1 <-
aggregate_grade_value %>%
mutate(across(where(is.character), str_remove_all, pattern = fixed(" ")))
# step 2: clean up entries
aggregate_grade_value_2 <-
aggregate_grade_value_1 %>%
group_by(Grade) %>%
summarize(Pond.Value=sum(Pond.Value))
# aggregate_grade_value_2 has grouped by everything that is typed in correctly. Now we need to fix the type errors and group them
# aggregate_grade_value only shows which grade produces the most revenue, because we don't have weight by number sold.
# _______________________________________________________________________________________________________
# DATAFRAME 3 Grade to Species
# This shows what species take up what grades.
# (We are proabably not going to use this).
grade_to_species <-
log_prices_clean_2 %>%
group_by(Grade, Species) %>%
count(sort = TRUE)
# _______________________________________________________________________________________________________
# DATAFRAME 4 Four Lines of Quarters to Pond Value
# This shows how much sales take place in each quarter over the 15 years. (This is a good one).
four_quarters <-
log_prices_clean_2 %>%
group_by(Quarter, Year) %>%
summarize(Pond.Value = sum(Pond.Value))
#install.packages("reshape")
library(reshape)
# transform integer into factor
four_quarters$Quarter <-
factor(four_quarters$Quarter)
typeof(four_quarters$Quarter)  # checking
# confirmed, is integer
ggplot(four_quarters, aes(x = Year, y = Pond.Value, color = Quarter)) +
geom_line(size=1) +
labs(x="Year", y="Pond Value", title="Pond Value by Quarter: 2000-2015") +
scale_y_continuous(labels=comma) +
theme(text = element_text(size = 24)) +
scale_x_continuous(breaks = seq(2000, 2016, by = 1))
#_________________________________________________________________________________________________________
# DATAFRAME 5 Species to Pond Value
# Aggregate sales of Species to Pond Value. (This is very good)
species_pond_value <-
log_prices_clean_2 %>%
group_by(Species) %>%
summarize(Pond.Value = sum(Pond.Value))
ggplot(species_pond_value, aes(x=Species, y=Pond.Value)) +
geom_col(aes(fill = Species)) +
labs(y="Pond Value", title="Pond Value by Species") +
scale_y_continuous(labels=comma) +
scale_fill_viridis_d() +
theme(text = element_text(size = 24), axis.text.x=element_blank(), panel.grid.major.x = element_blank())
# doing calculations for blog
species_pond_value %>% summarize(sum(Pond.Value))
# 3579925 is total
#DATAFRAME 5.1 Douglas Fir ONLY price over years
douglas_fir <- log_prices_clean_2 %>% filter(str_detect(Species, "Douglas-fir"))
nrow(douglas_fir)
# confirms 2332 from species_count dataframe
#now doing the same thing as DATAFRAME 1
douglas_fir_total <-
douglas_fir %>%
group_by(Year) %>%
summarize(sum(Pond.Value))
colnames(douglas_fir_total)[2] <- "pond_value"
douglas_fir_plot <-
douglas_fir_total %>%
ggplot(aes(x=Year, y = pond_value)) +
geom_line(col = "green3", aes(x=Year, y= pond_value), size=1) +
scale_color_manual(values=c('Green'))
douglas_fir_plot +
scale_x_continuous(breaks = seq(2000, 2016, by = 1)) +
labs(y = "Pond Value") +
ggtitle("Douglas Fir Pond Values: 2000-2015") +
scale_y_continuous(labels=comma) +
theme(text = element_text(size = 24))
# to normalize curve, find average of all 15 years.
# then divide each year by that average
year_vector <- c(2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015)
# normalizing Yearly Price Total
average_yearly <- mean(yearly_price_total$pond_value)
# result is 223745.3125
year_average_overlay <- as.numeric(as.character(yearly_price_total$pond_value)) / 223745.3125
# this is correct, now need to add year column back
overlay_p1<-data.frame(year_vector, year_average_overlay)
# normalizing Douglas Fir Total
average_douglas <- mean(douglas_fir_total$pond_value)
# result is 73955
douglas_average_overlay <-as.numeric(as.character(douglas_fir_total$pond_value)) / 73955
# this is correct, now need to add year column back
overlay_p2<-data.frame(year_vector, douglas_average_overlay)
# finally:
# overlay plot of Douglas Fir onto Yearly
ggplot(overlay_p2, aes(x=year_vector, y=douglas_average_overlay)) +
geom_line(col="green3", aes(x=year_vector, y=douglas_average_overlay), size=1) +
geom_line(data=overlay_p1, col="black", aes(x=year_vector, y=year_average_overlay), size=1) +
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma) +
theme(text = element_text(size = 24))
View(log_prices_clean_2)
# trying to calculate weight using quotes, first need to remove non numericals from Number.of.Quotes column
weighted_df$weight <- as.numeric(regmatches(log_prices_clean_2$Number.of.Quotes, regexpr("\\d+", log_prices_clean_2$Number.of.Quotes)))
# trying to calculate weight using quotes, first need to remove non numericals from Number.of.Quotes column
as.numeric(regmatches(log_prices_clean_2$Number.of.Quotes, regexpr("\\d+", log_prices_clean_2$Number.of.Quotes)))
# trying to calculate weight using quotes, first need to remove non numericals from Number.of.Quotes column
log_prices_clean_2$weighted<-as.numeric(regmatches(log_prices_clean_2$Number.of.Quotes, regexpr("\\d+", log_prices_clean_2$Number.of.Quotes)))
View(log_prices_clean_2)
View(log_prices_clean_1)
# trying to calculate weight using quotes, first need to remove non numericals from Number.of.Quotes column
log_prices_clean_2$weight<-as.numeric(regmatches(log_prices_clean_2$Number.of.Quotes, regexpr("\\d+", log_prices_clean_2$Number.of.Quotes)))
# now multiplying the two columns
weighted_df <- log_prices_clean_2 %>% mutate(total_weight = Pond.Value * weight)
View(weighted_df)
log_prices_clean_2 <- log_prices_clean_2[,-8]
# now multiplying the two columns
weighted_df <- log_prices_clean_2 %>% mutate(total_weight = Pond.Value * weight)
View(weighted_df)
View(weighted_df)
# DATAFRAME 0 Region to Pond Value
region_pond_value <-
weighted_df %>%
group_by(Region) %>%
summarize(total_value = sum(weight))
View(region_pond_value)
# slice off bottom two, seems like wron input.
region_pond_value <- region_pond_value[-c(6,7),]
View(region_pond_value)
# need to merge two rows, they are the same, but input differently. "2 & 3 - Coos, Douglas Counties & Roseburg"
# create temprorary input dataframe
input_df_1 <- data.frame("2 & 3 - Coos, Douglas Counties & Roseburg", 937040)
# change names of this dataframe
names(input_df_1) <- c("Region", "Pond.Value")
View(input_df_1)
# merge temp input_df_1 with region_pond_value
region_pond_value <- rbind(region_pond_value, input_df_1)   #this works!!!!! nice
# delete wrong rows
region_pond_value <- region_pond_value[-c(2,3),]
# merge temp input_df_1 with region_pond_value
region_pond_value <- rbind(region_pond_value, input_df_1)   #this works!!!!! nice
View(region_pond_value)
# __________________________________________________________________________________
# DATAFRAME 1 Year to Pond Value
yearly_price_total <-
weighted_df %>%
group_by(Year) %>%
summarize(total_value=sum(weighted))
View(weighted_df)
# __________________________________________________________________________________
# DATAFRAME 1 Year to Pond Value
yearly_price_total <-
weighted_df %>%
group_by(Year) %>%
summarize(total_value=sum(total_weight))
colnames(yearly_price_total)[2] <- "pond_value"
yearly_plot <-
yearly_price_total %>%
ggplot(aes(x=Year, y = pond_value)) +
geom_line(aes(x=Year, y=pond_value), size=1)
View(yearly_price_total)
yearly_plot +
scale_x_continuous(breaks = seq(2000, 2016, by = 1)) +
labs(y = "Pond Value") +
ggtitle("Total Pond Values: 2000-2015") +
scale_y_continuous(labels=comma) +
theme(text = element_text(size = 24))
# _______________________________________________________________________________________________________
# DATAFRAME 4 Four Lines of Quarters to Pond Value
# This shows how much sales take place in each quarter over the 15 years. (This is a good one).
four_quarters <-
weighted_df %>%
group_by(Quarter, Year) %>%
summarize(Pond.Value = sum(total_weight))
View(four_quarters)
#install.packages("reshape")
library(reshape)
# transform integer into factor
four_quarters$Quarter <-
factor(four_quarters$Quarter)
typeof(four_quarters$Quarter)  # checking
ggplot(four_quarters, aes(x = Year, y = Pond.Value, color = Quarter)) +
geom_line(size=1) +
labs(x="Year", y="Pond Value", title="Pond Value by Quarter: 2000-2015") +
scale_y_continuous(labels=comma) +
theme(text = element_text(size = 24)) +
scale_x_continuous(breaks = seq(2000, 2016, by = 1))
# DATAFRAME 5 Species to Pond Value
# Aggregate sales of Species to Pond Value. (This is very good)
species_pond_value <-
weighted_df %>%
group_by(Species) %>%
summarize(Pond.Value = sum(total_weight))
ggplot(species_pond_value, aes(x=Species, y=Pond.Value)) +
geom_col(aes(fill = Species)) +
labs(y="Pond Value", title="Pond Value by Species") +
scale_y_continuous(labels=comma) +
scale_fill_viridis_d() +
theme(text = element_text(size = 24), axis.text.x=element_blank(), panel.grid.major.x = element_blank())
# doing calculations for blog
species_pond_value %>% summarize(sum(Pond.Value))
#DATAFRAME 5.1 Douglas Fir ONLY price over years
douglas_fir <- log_prices_clean_2 %>% filter(str_detect(Species, "Douglas-fir"))
nrow(douglas_fir)
#now doing the same thing as DATAFRAME 1
douglas_fir_total <-
douglas_fir %>%
group_by(Year) %>%
summarize(sum(Pond.Value))
colnames(douglas_fir_total)[2] <- "pond_value"
douglas_fir_plot <-
douglas_fir_total %>%
ggplot(aes(x=Year, y = pond_value)) +
geom_line(col = "green3", aes(x=Year, y= pond_value), size=1) +
scale_color_manual(values=c('Green'))
douglas_fir_plot +
scale_x_continuous(breaks = seq(2000, 2016, by = 1)) +
labs(y = "Pond Value") +
ggtitle("Douglas Fir Pond Values: 2000-2015") +
scale_y_continuous(labels=comma) +
theme(text = element_text(size = 24))
#DATAFRAME 5.1 Douglas Fir ONLY price over years
douglas_fir <- weighted_df %>% filter(str_detect(Species, "Douglas-fir"))
nrow(douglas_fir)
#now doing the same thing as DATAFRAME 1
douglas_fir_total <-
douglas_fir %>%
group_by(Year) %>%
summarize(sum(Pond.Value))
colnames(douglas_fir_total)[2] <- "pond_value"
douglas_fir_plot <-
douglas_fir_total %>%
ggplot(aes(x=Year, y = pond_value)) +
geom_line(col = "green3", aes(x=Year, y= pond_value), size=1) +
scale_color_manual(values=c('Green'))
douglas_fir_plot +
scale_x_continuous(breaks = seq(2000, 2016, by = 1)) +
labs(y = "Pond Value") +
ggtitle("Douglas Fir Pond Values: 2000-2015") +
scale_y_continuous(labels=comma) +
theme(text = element_text(size = 24))
#DATAFRAME 5.1 Douglas Fir ONLY price over years
douglas_fir <- weighted_df %>% filter(str_detect(Species, "Douglas-fir"))
View(douglas_fir)
#now doing the same thing as DATAFRAME 1
douglas_fir_total <-
douglas_fir %>%
group_by(Year) %>%
summarize(Pond.Value=sum(total_weight))
colnames(douglas_fir_total)[2] <- "pond_value"
douglas_fir_plot <-
douglas_fir_total %>%
ggplot(aes(x=Year, y = pond_value)) +
geom_line(col = "green3", aes(x=Year, y= pond_value), size=1) +
scale_color_manual(values=c('Green'))
douglas_fir_plot +
scale_x_continuous(breaks = seq(2000, 2016, by = 1)) +
labs(y = "Pond Value") +
ggtitle("Douglas Fir Pond Values: 2000-2015") +
scale_y_continuous(labels=comma) +
theme(text = element_text(size = 24))
year_vector <- c(2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015)
# normalizing Yearly Price Total
average_yearly <- mean(yearly_price_total$pond_value)
year_average_overlay <- as.numeric(as.character(yearly_price_total$pond_value)) / 1309566.5625
overlay_p1<-data.frame(year_vector, year_average_overlay)
# normalizing Douglas Fir Total
average_douglas <- mean(douglas_fir_total$pond_value)
douglas_average_overlay <-as.numeric(as.character(douglas_fir_total$pond_value)) / 507112.1875
overlay_p2<-data.frame(year_vector, douglas_average_overlay)
# finally:
# overlay plot of Douglas Fir onto Yearly
ggplot(overlay_p2, aes(x=year_vector, y=douglas_average_overlay)) +
geom_line(col="green3", aes(x=year_vector, y=douglas_average_overlay), size=1) +
geom_line(data=overlay_p1, col="black", aes(x=year_vector, y=year_average_overlay), size=1) +
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma) +
theme(text = element_text(size = 24))
View(overlay_p1)
View(overlay_p2)
View(overlay_p1)
douglas_vector <- c("Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir",)
douglas_vector <- c("Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir")
triple_df['Catagorey'] <- douglas_vector
overlay_p1['Catagorey'] <- douglas_vector
View(overlay_p1)
overlay_p2['Catagorey'] <- douglas_vector
View(overlay_p2)
colnames(overlay_p2)[2] <- "Normalized Price"
View(overlay_p2)
total_species_vector <- c("Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species")
View(overlay_p1)
total_species_vector <- c("Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species")
overlay_p1['Catagorey'] <- total_species_vector
View(overlay_p1)
colnames(overlay_p1)[2] <- "Normalized Price"
View(overlay_p2)
View(overlay_p1)
View(overlay_p2)
colnames(overlay_p1)[2] <- "Normalized.Price"
douglas_vector <- c("Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir")
overlay_p2['Catagorey'] <- douglas_vector
View(overlay_p1)
View(overlay_p2)
colnames(overlay_p1)[2] <- "Normalized.Price"
View(overlay_p2)
View(region_count)
View(region_count)
View(overlay_p2)
View(overlay_p1)
colnames(overlay_p2)[2] <- "Normalized.Price"
View(overlay_p2)
View(overlay_p1)
merge(overlay_p1, overlay_p2)
View(overlay_p2)
View(overlay_p1)
final<-merge(overlay_p1, overlay_p2)
View(final)
View(overlay_p1)
View(overlay_p2)
merged_overlay <- cbind(overlay_p1, overlay_p2)
View(merged_overlay)
merged_overlay <- cbind(overlay_p1, overlay_p2, by = c('year_vector', 'Normalized.Price', 'Catagorey'))
merged_overlay <- inner_join(overlay_p1, overlay_p2)
View(merged_overlay)
merged_overlay <- inner_join(overlay_p1, overlay_p2)
View(merged_overlay)
merged_overlay <- left_join(overlay_p1, overlay_p2)
View(merged_overlay)
merged_overlay <- rbind(overlay_p1, overlay_p2)
View(merged_overlay)
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagorey))+
geom_line()+
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagorey))+
geom_line(aes(size=2))+
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagorey))+
geom_line(aes(size=1))+
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagorey))+
geom_line(aes(size=0.1))+
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagorey))+
geom_line()+
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagorey))+
geom_line(size=1)+
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))
total_species_vector <- c("Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species","Total Species")
overlay_p1['Catagory'] <- total_species_vector
colnames(overlay_p1)[2] <- "Normalized.Price"
douglas_vector <- c("Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir","Douglas Fir")
overlay_p2['Catagory'] <- douglas_vector
colnames(overlay_p2)[2] <- "Normalized.Price"
merged_overlay <- rbind(overlay_p1, overlay_p2)
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagory))+
geom_line(size=1)+
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagory))+
geom_line(size=1)+
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))+
scale_x_continuous(breaks = seq(2000, 2016, by = 1)) +
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagory))+
geom_line(size=1)+
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))+
scale_x_continuous(breaks = seq(2000, 2016, by = 1))
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagory))+
geom_line(size=1)+
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))+
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagory))+
geom_line(size=1)+
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))+
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagory))+
geom_line(size=1)+
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagory))+
geom_line()+
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagory))+
geom_line(size=1)+
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagory))+
geom_line(size=1)+
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))+
scale_x_continuous(breaks = seq(2000, 2016, by = 1))
scale_color_manual(values=c('Green','Black'))
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagory))+
geom_line(size=1)+
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))+
scale_x_continuous(breaks = seq(2000, 2016, by = 1))
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagory))+
geom_line(size=1)+
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))+
scale_x_continuous(breaks = seq(2000, 2016, by = 1))+
scale_color_manual(values=c('Green','Black'))
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagory))+
geom_line(size=1)+
labs(title = "Overlay of Douglas Fir and Total Yearly Prices", y="Normalized Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))+
scale_x_continuous(breaks = seq(2000, 2016, by = 1))+
scale_color_manual(values=c('Green','Black'))
# finally:
# overlay plot
ggplot(merged_overlay, aes(x=year_vector,y=Normalized.Price, color = Catagory))+
geom_line(size=1)+
labs(title = "Overlay of Douglas Fir and Total Species Yearly Prices", y="Normalized Pond Value", x="Year") +
scale_y_continuous(labels=comma)+
theme(text=element_text(size=24))+
scale_x_continuous(breaks = seq(2000, 2016, by = 1))+
scale_color_manual(values=c('Green','Black'))
ggplot(species_pond_value, aes(x=Species, y=Pond.Value)) +
geom_col(aes(fill = Species)) +
labs(y="Pond Value", title="Pond Value by Species") +
scale_y_continuous(labels=comma) +
scale_fill_viridis_d() +
theme(text = element_text(size = 24), axis.text.x=element_blank(), panel.grid.major.x = element_blank())
View(weighted_df)
View(species_pond_value)
